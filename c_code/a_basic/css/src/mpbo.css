@charset "UTF-8";
/* mpbo.css */
/* 내용 진행하기 앞서 기본 margin, padding 요소를 지우고 시작하기 */

html,body,h1,h2,h3,h4,h5,h6,p,ul,hr {margin:0; padding:0;}


#wrap {width:1100px; height:auto; min-height:1200px; margin:auto;
background-color: #dfdfdf; padding-top:20px;}

h1 { width: 300px; height: 40px; background-color: #aca;
 margin:auto; margin-bottom:20px;}


.part {
  width: 100%; height: 700px; border:1px solid #777;
}
.part > ul { margin:0; padding:0; list-style:none; width: 100%; height: 100px; }

.part > ul > li { float:left; width: 100px; height: 100px; border: 1px solid #0af;
text-align:center; line-height: 100px; }

/*margin : 요소와 요소 사이의 거리 (눈에 보이는 공간)
margin: 10px; 위, 오른쪽, 아래, 왼쪽 (4방향) 모두 동일한 (10px) 여백을 가진다.
margin: 10px 30px; 위/아래, 좌/우로 값을 각각 분배하여 여백을 가진다.
margin: 10px 30px 50px; 위(10) 좌/우(30) 아래(50) 로 값을 분배하여 여백을 가진다.
margin: 10px 30px 50px 100px; 시계방향으로 각각 여백을 가진다.
margin-방향 : 50px; 원하는 방향을 기준으로 여백을 가진다.
단, margin을 중첩하여 사용할 경우에는, 겹치는 부분이 나중에 작성한 부분으로 처리가 되므로, 주의하여 
사용할 것. (전체를 잡아주고 부분 잡아주기)

 */


.margin li:nth-child(1) {margin:10px;}
.margin li:nth-child(2) { margin:10px 30px; }
.margin li:nth-child(3) { margin:10px 30px 50px; }
.margin li:nth-child(4) { margin:10px 30px 50px 100px; }
.margin li:nth-child(5) { margin:0 0 0 100px; }
.margin li:nth-child(6) { margin-top:30px; margin-left:50px; }
.margin li:nth-child(7) { margin:20px; margin-top:70px; margin-right:10px;}

/* -------------------------------------------------------------------- */

.padding > ul > li {text-align: left; line-height:20px; font-weight:bold;} 
.padding > ul > li:nth-child(2n - 1){background-color:#fac;}
.padding > ul > li:nth-child(2n){background-color:#3af;}

.padding_sample { padding:20px; width: 300px; height: 150px; background-color: #fa7;}
.insert_p {width: 100%; height: 100%; background-color: #fff;}

/* padding: 요소의 부피를 키워서 공간을 확보하는 형태로, width/height값의 실제는 변하지 않지만, 외부에서 보이기로는 
    width와 height가 변한것처럼 보이도록 처리된다.
    padding: 20px; 위,오른쪽,아래,왼쪽 4방향을 모두 공간 혹은 면적을 만든다.
    padding: 20px 40px; 위/아래(20), 좌/우(40) 공간 면적을 만든다.
    padding:10px 30px 100px; 위(10), 좌/우(30), 아래(100) 공간 면적을 만든다.
    padding: 10px 20px 30px 40px; 시계방향으로 각각 공간의 면적을 만든다.
    padding: 방향:50px; 사용된 방향만 별도의 공간 면적을 가진다 단, 전체의 값을 먼저 사용하고 일부분을 나중에 사용하여야 필요한 형태로 제작이 가능 */

.padding > ul > li:nth-child(1){ padding:20px;}
.padding > ul > li:nth-child(2){ padding:20px 40px;}
.padding > ul > li:nth-child(3){ padding:10px 30px 100px;}
.padding > ul > li:nth-child(4){ padding:10px 20px 30px 40px;}
.padding > ul > li:nth-child(5){ padding:10px 10px 50px 10px; }
.padding > ul > li:nth-child(6){ padding:10px; padding-bottom:50px; }

.mp-sample {
  width: 700px; height: 1000px; margin:auto; border:2px solid #777;}
  .mp_sample p {width: 70%; height: 50px; background-color: #aca; border-bottom:1px solid #07f;}

  .mp_sample p:nth-of-type(1) {margin:auto; margin-top:100px; margin-bottom:30px;}
  .mp_sample p:nth-of-type(2) {margin-top:50px;}
  .mp_sample p:nth-of-type(4) {width: 50%; margin-left:50px; margin-top:-20px; background-color: #caa;}
  .mp_sample p:nth-of-type(5) {width: 50%; height: 100px; background-color: #fa0; margin-left:50%; margin-top:10%;}

  /* top/bottom margin 따로 적용 시 큰값만 먹는다. */


  /* ------------------------------------- */

/* border:외곽선 */
.border ul li:nth-child(1) { border-width:10px; border-style:solid ; /* solid(직선), dotted(점선), dashed(쇄선), ridge, double...*/
   border-color:#fc7;}

.border ul li:nth-child(2) {border: 5px dotted #85f;}
.border ul li:nth-child(3) {
  border-width:15px;
  border-top-width:3px;
  border-left-width:30px;
  border-style:solid; 
  border-right-style:dotted; 
  border-bottom-style:ridge; 
  border-color:#f08;
  border-left-color:#fa9;}

.border ul li:nth-child(4){
  background-color: #caa;
  /* border:30px ridge #fa0; */
border-top:10px; solid #f03;
border-bottom:10px solid #fff;
border-left:none ;
border-right:none ;
}

.border ul li:nth-child(5) {
  border:30px solid #0af;
  border-top-color:#fff;
}


.border ul li:nth-child(6) {
  width: 0px; height: 0px; border:30px solid #f03;
  border-top-width:0;
  border-bottom-width:50px;
  border-top-color:transparent; 
  border-left-color:rgba(255,0,51,0);
  border-right-color:hsla(358,100%,50%, 0);
  
  font-size:0.4rem;
  text-indent:-20px;
  line-height:70px;
  color:#fff; font-weight:bold;
}

.border ul li:nth-child(7) {
  border:5px solid #f03;
  border-left:transparent;
  border-bottom-color:transparent;
  transform:rotate(45deg);
}

.border ul li:nth-child(7) > span {
  display:block; width: 100%; height: 100%;
  transform: rotate(-45deg);
}

/* ---------------------------------------------------------- */
/* 1.outline속성은 margin,padding, border 와는 다르게 다른 요소에 영향을 미치지 않는다. 
   2.outline속성은 일부 방향성이 없다.
   3.기존 선의 위치에서 일부 공간을 만들어서 표기하는 형태만 존재
   4.그 쓰임 위치는 대부분 focus를 처리하게 만드는 요소 (a, button,form 내부의 요소)에서 
   주로 사용 한다.*/

.outline ul li,
.outline ul li > button {width: auto; min-width: 100px; cursor:pointer;}

.outline li:nth-child(1) {
  /* outline-width:10px; 
  outline-style:solid;
  outline-color:#0af;*/
  
  outline:10px solid #ff0;
  outline-offset:5px;
}
/*.outline li:nth-child(2) > a 
두번째 li 내부에 존재하는 a*/

/* focus란?
링크(a) , 버튼(input or button) , 입력창 (input, select) 등의 환경에서, 마우스가 아닌 키보드로 위치를 찾아서 기능을 수행하고 자 할 때, 해당 위치에 선점한것을 체크하는 기능 */

/* .outline li > a:nth-of-type(2) 형제중 두번째 선택 */

.outline li:nth-child(2) > a {display:block; width: 100%; height: 100%;}
.outline li:nth-child(2) > a:focus {outline:5px solid #fa0;} 



.outline li:nth-child(3) > button {
  display:block; width: 100px; height: 100%; border:0; background-color: transparent;
  }
.outline li:nth-child(3) > button:focus {
  outline:10px solid #f07;
} 

.outline li:nth-child(4):focus {
outline:20px solid #0f7;
}

.box_sizing {width: 80%; height: 400px; margin:100px auto;
}

.box_sizing div {
  width: 100px; height: 100px;
  margin:10px; padding: 15px; border:30px solid #777;
  border-right-color:#0af;
  background-color: #fa5;}
  /* box-sizing:content-box, border-box시 사이즈가 달라진다. 기본이 content 이고
  상자 선 기준 밖으로 크기가 커짐 border는 선을 기준으로 내부로 사이즈가 변함 */
  

  .box_sizing div:nth-of-type(1) {box-sizing:content-box;}
  .box_sizing div:nth-of-type(2) {box-sizing:border-box;}

/*box-sizing 하기전 (before)은 box-sizing:content-box;로서 기본형으로 처리 
  box-sizing을 사용하면 (after) box-sizing:border-box; 로서 border와 padding 모두 내부에 처리
 */



 /* ========================================= */
 .nth_01 > li {
   border-bottom:1px solid #aaa;}
   .nth_01 > li:nth-child(1)
   {background-color: #fa0;}
   .nth_01 > li:nth-child(4) 
   {background-color: #f0a;}

   .nt {
     padding-left:1rem;
     border-bottom:1px solid #fa0;
   }

   .nt:nth-child(2) {
     background-color: #fac;
   }
   .nt:nth-child(5) {
     background-color: #acf;
   }

   .nth_02 p:nth-of-type(1) { color:#f00;}
   p:nth-of-type(5) {
     font-weight:bold;
   }

   /* ==================================================== */